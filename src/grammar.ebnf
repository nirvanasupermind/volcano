ws = { " " | "\n" | "\t" | "\r" | "\f" | "\b" };
letter = "A" | "B" | "C" | "D" | "E" | "F" | "G"
       | "H" | "I" | "J" | "K" | "L" | "M" | "N"
       | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
       | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
       | "c" | "d" | "e" | "f" | "g" | "h" | "i"
       | "j" | "k" | "l" | "m" | "n" | "o" | "p"
       | "q" | "r" | "s" | "t" | "u" | "v" | "w"
       | "x" | "y" | "z" ;
digit =  "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
number = ws, { digit }, ws;
string = ws, '"', { ? any character except double quote ? }, '"';
identifier = ws, (letter | "_"), { letter | digit | "_" }, ws;
keyword  = ws, (letter | "_"), { letter | digit | "_" }, ws;
plus = ws, "+", ws;
minus = ws, "-", ws;
mul = ws, "*", ws;
div = ws, "/", ws;
mod = ws, "%", ws;
not = ws, "~", ws;
and = ws, "&", ws;
or = ws, "|", ws;
xor = ws, "^", ws;
lsh = ws, "<<", ws;
rsh = ws, ">>", ws;
logical not = ws, "!", ws;
logical and = ws, "&&", ws;
logical or = ws, "||", ws;
ee = ws, "==", ws;
ne = ws, "!=", ws;
lt = ws, "<", ws;
gt = ws, ">", ws;
le = ws, "<=" ws;
ge = ws, ">=", ws;
eq = ws, "=", ws;
plus eq = ws, "+=", ws;
minus eq = ws, "-=", ws;
mul eq = ws, "*=", ws;
div eq = ws, "/=", ws;
mod eq = ws, "%=", ws;
and eq = ws, "&=", ws;
or eq = ws, "|=", ws;
xor eq = ws, "^=", ws;
lsh eq = ws, "<<=", ws;
rsh eq = ws, ">>=", ws;
inc = ws, "++", ws;
dec = ws, "--", ws;
lparen  = ws, "(", ws;
rparen = ws, ")", ws;
lsquare = ws, "[", ws;
rsquare = ws, "]", ws;
lcurly = ws, "{", ws;
rcurly = ws, "}", ws;
period = ws, ".", ws;
comma = ws, ",", ws;
colon = ws, ":", ws;
semicolon = ws, ";", ws;
